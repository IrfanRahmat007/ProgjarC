/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author ASUS-PC
 */
import SLib.SRR;
import java.io.IOException;
import java.net.Socket;
import javax.swing.JFileChooser;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

public class MainSClient extends javax.swing.JFrame {
    Socket socket = null;
    String IP;
    ArrayList<ThreadClient> allThread = new ArrayList<>();
    File selectedFile=null;
    /**
     * Creates new form MainSClient
     */
    public MainSClient() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        TxtPath = new javax.swing.JTextField();
        CmdBrowse = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        TxtLog = new javax.swing.JTextArea();
        CmdExit = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        TxtIP = new javax.swing.JTextField();
        CmdConnect = new javax.swing.JButton();
        TxtIndex = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        CmdSend = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TxtIPList = new javax.swing.JTextArea();
        CmdRefresh = new javax.swing.JButton();
        CmbType = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("File Sharing");
        setLocationByPlatform(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setText("Filename");

        TxtPath.setEditable(false);
        TxtPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtPathActionPerformed(evt);
            }
        });

        CmdBrowse.setText("Browse");
        CmdBrowse.setEnabled(false);
        CmdBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CmdBrowseActionPerformed(evt);
            }
        });

        TxtLog.setEditable(false);
        TxtLog.setColumns(20);
        TxtLog.setRows(5);
        jScrollPane1.setViewportView(TxtLog);

        CmdExit.setText("Exit");
        CmdExit.setEnabled(false);
        CmdExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CmdExitActionPerformed(evt);
            }
        });

        jLabel2.setText("Server IP");

        TxtIP.setText("127.0.0.1");

        CmdConnect.setText("Connect...");
        CmdConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CmdConnectActionPerformed(evt);
            }
        });

        TxtIndex.setText("0");
        TxtIndex.setToolTipText("Index of User. Divide by space");
        TxtIndex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtIndexActionPerformed(evt);
            }
        });

        jLabel3.setText("Index");

        CmdSend.setText("Send");
        CmdSend.setEnabled(false);
        CmdSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CmdSendActionPerformed(evt);
            }
        });

        TxtIPList.setEditable(false);
        TxtIPList.setColumns(20);
        TxtIPList.setRows(5);
        jScrollPane2.setViewportView(TxtIPList);

        CmdRefresh.setText("Refresh");
        CmdRefresh.setToolTipText("");
        CmdRefresh.setEnabled(false);
        CmdRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CmdRefreshActionPerformed(evt);
            }
        });

        CmbType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Unicast", "Multicast", "Broadcast" }));
        CmbType.setEnabled(false);
        CmbType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CmbTypeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(CmdExit))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(TxtIP, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CmdConnect)
                        .addGap(0, 13, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(TxtIndex, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)
                                    .addComponent(TxtPath))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CmdBrowse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CmdSend, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CmdRefresh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CmbType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(TxtIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CmdConnect))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(TxtPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CmdBrowse))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TxtIndex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(CmdSend))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(CmbType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(CmdRefresh)))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(CmdExit)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CmdExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CmdExitActionPerformed
       if(socket!=null)
       {
           allThread.get(0).ExitThread();
       }
        System.exit(0);
    }//GEN-LAST:event_CmdExitActionPerformed

    private void CmdBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CmdBrowseActionPerformed
        // TODO add your handling code here:
        JFileChooser OPF = new JFileChooser();
        OPF.setCurrentDirectory(new File(System.getProperty("user.home")));
        int result = OPF.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            TxtPath.setText(OPF.getSelectedFile().getPath());
             selectedFile= OPF.getSelectedFile();
             CmdSend.setEnabled(true);
            // user selects a file
        }
        
    }//GEN-LAST:event_CmdBrowseActionPerformed

    private void TxtPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtPathActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtPathActionPerformed

    private void CmdConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CmdConnectActionPerformed
        // TODO add your handling code here:
        IP=TxtIP.getText();
        ArrayList<String> IPList;
        if(!IP.equals(""))
        {
            try {
                socket=new Socket(IP,6060);
                synchronized(allThread)
                {
                    ThreadClient tc = new ThreadClient(socket,allThread);
                    allThread.add(tc);
                    Thread t = new Thread(tc);
                    t.start();
                    IPList=allThread.get(0).getIPList();
                    CmdBrowse.setEnabled(true);
                    CmdRefresh.setEnabled(true);
                    CmdExit.setEnabled(true);
                    CmdConnect.setEnabled(false);
                    CmbType.setEnabled(true);
                    log("Connected to : " + TxtIP.getText());
                }
                
            } catch (IOException ex) {
                log(ex.getMessage());
                Logger.getLogger(MainSClient.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else
        {
            log("No IP Address!!");
        }
    }//GEN-LAST:event_CmdConnectActionPerformed

    private void TxtIndexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtIndexActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtIndexActionPerformed

    private void CmdSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CmdSendActionPerformed
        // TODO add your handling code here:
        SRR SR = new SRR(0);
        if(CmbType.getSelectedIndex()==1)
        {
              SR.setRequestCode(12);
              String[] dest=TxtIndex.getText().split(" ");
              int[] dest2=new int[dest.length];
              for(int i=0;i<dest.length;i++)
              {
                  System.out.println(dest[i]);
                  if(!dest[i].equals(""))
                  {
                      dest2[i]=Integer.parseInt(dest[i]);
                  }
              }
              SR.setDestIndexes(dest2);
        }
        else if(CmbType.getSelectedIndex()==2)
        {
            SR.setRequestCode(13);
        }
        else
        {
            SR.setRequestCode(3);
            SR.setDestIndex(Integer.parseInt(TxtIndex.getText()));
        }
        SR.setFilenames(selectedFile.getName());
        
        try {
            FileInputStream FS = new FileInputStream(selectedFile);
            int len = (int) selectedFile.length();
            byte[] temp;
            temp = new byte[len];
            try {
                FS.read(temp);
                SR.setFiles(temp);
                allThread.get(0).sendFile(SR);
            } catch (IOException ex) {
                log(ex.getMessage());
                Logger.getLogger(MainSClient.class.getName()).log(Level.SEVERE, null, ex);
                
            }
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MainSClient.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_CmdSendActionPerformed

    private void CmdRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CmdRefreshActionPerformed
        try {
            allThread.get(0).GetIPListFromServer();
        } catch (IOException ex) {
            Logger.getLogger(MainSClient.class.getName()).log(Level.SEVERE, null, ex);
        }
            TxtIPList.setText("");
            for(int i =0; i < allThread.get(0).getIPList().size();i++)
                {
                    int j=i;
                    TxtIPList.append(j+" "+allThread.get(0).getIPList().get(i)+"\n");
                }
    }//GEN-LAST:event_CmdRefreshActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        if(socket!=null)
        {
            allThread.get(0).ExitThread();
        }
    }//GEN-LAST:event_formWindowClosing

    private void CmbTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CmbTypeActionPerformed
        // TODO add your handling code here:
        if(CmbType.getSelectedIndex()==2)
        {
            TxtIndex.setEnabled(false);
        }
        else
        {
            TxtIndex.setEnabled(true);
        }
    }//GEN-LAST:event_CmbTypeActionPerformed

    public void log(String text)
    {
        TxtLog.append(text+"\n");
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainSClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainSClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainSClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainSClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainSClient().setVisible(true);
                
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox CmbType;
    private javax.swing.JButton CmdBrowse;
    private javax.swing.JButton CmdConnect;
    private javax.swing.JButton CmdExit;
    private javax.swing.JButton CmdRefresh;
    private javax.swing.JButton CmdSend;
    private javax.swing.JTextField TxtIP;
    private javax.swing.JTextArea TxtIPList;
    private javax.swing.JTextField TxtIndex;
    private javax.swing.JTextArea TxtLog;
    private javax.swing.JTextField TxtPath;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    // End of variables declaration//GEN-END:variables
}
